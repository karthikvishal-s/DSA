def fibo(n):
    if n==1 or n==2:
        return 1
    return fibo(n-1) + fibo(n-2)


def fib_memo(n,memo):
    if n<=1:
        return n

    if n in memo:
        return memo[n]

    
    result = fib_memo(n-1,memo)+fib_memo(n-2,memo)
    memo[n]=result
    return memo[n]


def fib_table(n):
    if n<=1:
        return n
    
    dp=[0]*(n+1)
    dp[0],dp[1]=0,1
    for i in range(2,n+1):
        dp[i]=dp[i-1]+dp[i-2]

    return dp[n]

def fib_opt(n):
    if n<=1:
        return n
    
    prev1,prev2=0,1

    for _ in range(2,n+1):
        curr=prev1+prev2
        prev1,prev2=prev2,curr
        
    return prev2

print("recursion method : ",fibo(6))
print("memoization : ",fib_memo(6,{}))
print("tabulation : ",fib_table(6))
print("optimized : ",fib_opt(6))